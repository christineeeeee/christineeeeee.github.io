<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Strategy on Stop this train</title>
    <link>https://christineeeeee.com/tags/strategy/</link>
    <description>Recent content in Strategy on Stop this train</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 05 Jun 2020 18:08:00 +0000</lastBuildDate>
    
	<atom:link href="https://christineeeeee.com/tags/strategy/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Twitter Sentiment Strategy</title>
      <link>https://christineeeeee.com/posts/twitter_sentiment/</link>
      <pubDate>Fri, 05 Jun 2020 18:08:00 +0000</pubDate>
      
      <guid>https://christineeeeee.com/posts/twitter_sentiment/</guid>
      <description>1. Introduction This is an exploratory research trying to implement a sentiment analysis mechanism of ten of the most discussed techonology stocks in the market nowadays. By collecting people&amp;rsquo;s discussions about the stocks on twitter, we used NLP (Natural language processing) to analyze people&amp;rsquo;s reactions and guesses of the market and got a score which indicates people&amp;rsquo;s positive or negative attitudes towards those certain stocks. Based on the daily scores we get, we adjusted our positions automatically.</description>
    </item>
    
    <item>
      <title>Robust and Bayesian Regression Comparison</title>
      <link>https://christineeeeee.com/posts/robust_comparison/</link>
      <pubDate>Sat, 30 May 2020 02:08:00 +0000</pubDate>
      
      <guid>https://christineeeeee.com/posts/robust_comparison/</guid>
      <description>Robust techniques and variable selection can help us obtain more stable linear fits. In this post, I used return regressions against returns on State Street sctors ETFs to test this fact. By computing out-of-sample regression, I contrast the performance of OLS regression, robust regression(huber and tukey) and positive lasso regressions.
1 2 3 4 5 6 7 8 9 10 11 12  import os import quandl import pickle import warnings import numpy as np import pandas as pd import seaborn as sns from tqdm.</description>
    </item>
    
    <item>
      <title>Comparison Between Exponential Weighted and Rolling Regression</title>
      <link>https://christineeeeee.com/posts/regression_comparison/</link>
      <pubDate>Fri, 15 May 2020 21:16:00 +0000</pubDate>
      
      <guid>https://christineeeeee.com/posts/regression_comparison/</guid>
      <description>This research discusses two normal prediction ways people are using: exponential weighted regression and rolling regression. By comparing the prediction errors of both ways, we generally get the idea of the difference between these two regressions.
1. Introduction Comparison between two ways of regression  Exponential Weighted Moving Regression: considering all the previous data to do the regression, however, following the intuition that the nearer data have more effects on the future data, the weight of data are different regarding time.</description>
    </item>
    
    <item>
      <title>Quantile Trading</title>
      <link>https://christineeeeee.com/posts/hw4_christine-li/</link>
      <pubDate>Wed, 15 Apr 2020 12:45:00 +0000</pubDate>
      
      <guid>https://christineeeeee.com/posts/hw4_christine-li/</guid>
      <description>This is a strategy which we trade different securities by ranking their performance and using their quantile as signals.
1. Data preparation Introduction of the packages we used We&amp;rsquo;re using several really important python packages in this strategy:
 Pandas: dataframe manipulation NumPy: support for mathematical functions and computation of arrays and matrics Quandl: source of our future data Statsmodel: statistical analysis Matplotlib: plot tools Seaborn: statistical data visualization Glob: retrieve files matching a specified pattern os: interact with the operating system tqdm: progress bar  1 2 3 4 5 6 7 8 9 10 11 12 13 14  import os import numpy as np import pandas as pd import pickle import quandl import warnings from functools import reduce from tqdm.</description>
    </item>
    
    <item>
      <title>Spread Trading Strategy</title>
      <link>https://christineeeeee.com/posts/spread_trading/</link>
      <pubDate>Tue, 17 Mar 2020 22:16:00 +0000</pubDate>
      
      <guid>https://christineeeeee.com/posts/spread_trading/</guid>
      <description>This is a spreading strategy which is based on M-day returns of two highly related futures. The idea of this strategy is to hedge the risk of buying and holding one specific future with increasing returns by holding the opposite position of another future.
We define g and j be our trading thresholds in this strategy. Besides, we also have stop-loss threshold s. Our initial capital K is $100MM.
1. Introduction In this section we give brief intro on the strategy we&amp;rsquo;re about to implement.</description>
    </item>
    
  </channel>
</rss>